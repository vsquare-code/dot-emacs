#+STARTUP: overview
* interface tweaks
#+BEGIN_SRC emacs-lisp
(setq inhibit-startup-message t)

;; disable bell sound
(setq ring-bell-function 'ignore)

;; always show line numbers
(global-linum-mode 1)

(fset 'yes-or-no-p 'y-or-n-p)
(global-set-key (kbd "<f5>") 'revert-buffer)

;; Slime
(setq inferior-lisp-program "C:/Program Files (x86)/clisp-2.49/clisp.exe")

;; set the default directory
(setq default-directory "c:/Users/vishnu/programs/elisp")
#+END_SRC

* try
#+BEGIN_SRC emacs-lisp
(use-package try
	     :ensure t)
#+END_SRC

* which key
#+BEGIN_SRC emacs-lisp
(use-package which-key
	     :ensure t
	     :config
	     (which-key-mode))
#+END_SRC

* Ace windows
#+BEGIN_SRC emacs-lisp
; add this to init.el
(use-package ace-window
  :ensure t
  :init
  (progn
    (global-set-key [remap other-window] 'ace-window)
    (custom-set-faces
     '(aw-leading-char-face
       ((t (:inherit ace-jump-face-foreground :height 3.0)))))
    ))
#+END_SRC

* Swiper/ Ivy/ Counsel
#+BEGIN_SRC emacs-lisp
;; https://cestlaz.github.io/posts/using-emacs-6-swiper/
;; it looks like counsel is a requirement for swiper
(use-package counsel
  :ensure t
  )

(use-package swiper
  :ensure try
  :config
  (progn
    (ivy-mode 1)
    (setq ivy-use-virtual-buffers t)
    (global-set-key "\C-s" 'swiper)
    (global-set-key (kbd "C-c C-r") 'ivy-resume)
    (global-set-key (kbd "<f6>") 'ivy-resume)
    (global-set-key (kbd "M-x") 'counsel-M-x)
    (global-set-key (kbd "C-x C-f") 'counsel-find-file)
    (global-set-key (kbd "<f1> f") 'counsel-describe-function)
    (global-set-key (kbd "<f1> v") 'counsel-describe-variable)
    (global-set-key (kbd "<f1> l") 'counsel-load-library)
    (global-set-key (kbd "<f2> i") 'counsel-info-lookup-symbol)
    (global-set-key (kbd "<f2> u") 'counsel-unicode-char)
    (global-set-key (kbd "C-c g") 'counsel-git)
    (global-set-key (kbd "C-c j") 'counsel-git-grep)
    (global-set-key (kbd "C-c k") 'counsel-ag)
    (global-set-key (kbd "C-x l") 'counsel-locate)
    (global-set-key (kbd "C-S-o") 'counsel-rhythmbox)
    (define-key read-expression-map (kbd "C-r") 'counsel-expression-history)
    ))
#+END_SRC

* Avy - navigate by searching for a letter on the screen and jumpig to it
#+BEGIN_SRC emacs-lisp
(use-package avy
  :ensure t
  :bind ("C-:" . avy-goto-char))
#+END_SRC

* Autocomplete
#+BEGIN_SRC emacs-lisp
;; https://cestlaz.github.io/posts/using-emacs-8-autocomplete/
(use-package auto-complete
  :ensure t
  :init
  (progn
    (ac-config-default)
    (global-auto-complete-mode t)
    ))
#+END_SRC

* Themes
#+BEGIN_SRC emacs-lisp
(use-package zenburn-theme
  :ensure t
  :config (load-theme 'zenburn t))

(use-package color-theme-modern
  :ensure t)
#+END_SRC
